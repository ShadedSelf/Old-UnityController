#pragma kernel CSMain

RWTexture2D<float> rt;
Texture2D<float> c;

float2 lightPos;
int loops;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	//rt[id.xy] = 0;

	float2 del = lightPos - float2(id.xy);

	float yr;
	bool yer = false;
	if (abs(del.x) < abs(del.y))
	{
		yr = abs(del.x) / abs(del.y);
		yer = true;
	}
	else
		yr = abs(del.y) / abs(del.x);

	float2 st;
	uint2 pixel;
	float temp;
	for (int i = 0; i < loops; i++)
	{
		float2 signer = st * sign(del);
		int2 doer = int2(round(signer.x), round(signer.y));

		if (yer)
			doer = doer.yx;

		if ((yer && del.x >= 0 && del.y <= 0) || (yer && del.x < 0 && del.y > 0))
		{
			doer.x *= -1;
			doer.y *= -1;
		}

		pixel = clamp(id.xy + doer, 0, 127);

		if (pixel.x == uint(lightPos.x) && pixel.y == uint(lightPos.y))
		{
			rt[id.xy] = 1;
			break;
		}

		if (c[pixel] < .5)
		{
			rt[id.xy] = 0;
			break;
		}
		if (rt[pixel] > .5 && i > 0) 
		{
			/*rt[id.xy] = 1;
			break;*/
			temp += 1;
		}

		if (i == loops - 1)
		{
			if (loops / temp < 2)
				rt[id.xy] = 1;
		}

		st.x += 1;
		st.y += yr;
	}


	/*rt[id.xy] = rt[pixel];

	if (c[id.xy] < .5)
		rt[id.xy] = 0;*/

	if (id.x == uint(lightPos.x) && id.y == uint(lightPos.y))
		rt[id.xy] = 1;

}
